{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useFlip = function () {\n  _s();\n  let initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  const [isFacingUp, setIsFacingUp] = useState(initialState);\n  const flip = () => {\n    setIsFacingUp(flipped => !flipped);\n  };\n  return [isFlipped, flip];\n};\n_s(useFlip, \"z79Xgv7DuFCx8ac7G9htkQ+gRuA=\");\nexport default useFlip;","map":{"version":3,"names":["useEffect","useState","useFlip","_s","initialState","arguments","length","undefined","isFacingUp","setIsFacingUp","flip","flipped","isFlipped"],"sources":["/home/xela/Springboard/Exercises/39.10-Custom-Hooks/react-cards-pokemon/src/hooks.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useFlip = (initialState = true) => {\n  const [isFacingUp, setIsFacingUp] = useState(initialState);\n  const flip = () => {\n    setIsFacingUp(flipped => !flipped);\n  }\n\n  return [isFlipped, flip]\n}\n\n\n\n\nexport default useFlip;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAyB;EAAAC,EAAA;EAAA,IAAxBC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAClC,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAACG,YAAY,CAAC;EAC1D,MAAMM,IAAI,GAAGA,CAAA,KAAM;IACjBD,aAAa,CAACE,OAAO,IAAI,CAACA,OAAO,CAAC;EACpC,CAAC;EAED,OAAO,CAACC,SAAS,EAAEF,IAAI,CAAC;AAC1B,CAAC;AAAAP,EAAA,CAPKD,OAAO;AAYb,eAAeA,OAAO"},"metadata":{},"sourceType":"module"}