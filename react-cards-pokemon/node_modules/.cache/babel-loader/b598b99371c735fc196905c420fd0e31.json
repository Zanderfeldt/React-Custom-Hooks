{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport uuid from \"uuid\";\nimport axios from \"axios\";\nconst useFlip = function () {\n  _s();\n  let initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  const [isFacingUp, setIsFacingUp] = useState(initialState);\n  const flip = () => {\n    setIsFacingUp(flipped => !flipped);\n  };\n  return [isFacingUp, flip];\n};\n_s(useFlip, \"z79Xgv7DuFCx8ac7G9htkQ+gRuA=\");\nconst useAxios = function (url) {\n  _s2();\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const fetchData = async () => {\n    if (name) {\n      const response = await axios.get(url + `${name}/`);\n    } else {\n      const response = await axios.get(url);\n    }\n    setData(data => [...data, {\n      ...response.data,\n      id: uuid()\n    }]);\n  };\n  return [data, fetchData];\n};\n_s2(useAxios, \"C3f01xByHYl5ieYpZYcHQTxbICY=\");\nexport { useFlip, useAxios };","map":{"version":3,"names":["useEffect","useState","uuid","axios","useFlip","_s","initialState","arguments","length","undefined","isFacingUp","setIsFacingUp","flip","flipped","useAxios","url","_s2","name","data","setData","error","setError","fetchData","response","get","id"],"sources":["/home/xela/Springboard/Exercises/39.10-Custom-Hooks/react-cards-pokemon/src/hooks.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport uuid from \"uuid\";\nimport axios from \"axios\";\n\nconst useFlip = (initialState = true) => {\n  const [isFacingUp, setIsFacingUp] = useState(initialState);\n  const flip = () => {\n    setIsFacingUp(flipped => !flipped);\n  }\n\n  return [isFacingUp, flip]\n}\n\nconst useAxios = (url, name = null) => {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n\n  const fetchData = async () => {\n    if (name) {\n      const response = await axios.get(url+`${name}/`);\n    } else {\n      const response = await axios.get(url);\n    }\n    setData(data => [...data, {...response.data, id: uuid()}]);\n  }\n\n  return [data, fetchData]\n}\n\n\nexport {useFlip, useAxios};"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAyB;EAAAC,EAAA;EAAA,IAAxBC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAClC,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAACK,YAAY,CAAC;EAC1D,MAAMM,IAAI,GAAGA,CAAA,KAAM;IACjBD,aAAa,CAACE,OAAO,IAAI,CAACA,OAAO,CAAC;EACpC,CAAC;EAED,OAAO,CAACH,UAAU,EAAEE,IAAI,CAAC;AAC3B,CAAC;AAAAP,EAAA,CAPKD,OAAO;AASb,MAAMU,QAAQ,GAAG,SAAAA,CAACC,GAAG,EAAkB;EAAAC,GAAA;EAAA,IAAhBC,IAAI,GAAAV,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAChC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMqB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAIL,IAAI,EAAE;MACR,MAAMM,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAACT,GAAG,GAAE,GAAEE,IAAK,GAAE,CAAC;IAClD,CAAC,MAAM;MACL,MAAMM,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAACT,GAAG,CAAC;IACvC;IACAI,OAAO,CAACD,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAC,GAAGK,QAAQ,CAACL,IAAI;MAAEO,EAAE,EAAEvB,IAAI,CAAC;IAAC,CAAC,CAAC,CAAC;EAC5D,CAAC;EAED,OAAO,CAACgB,IAAI,EAAEI,SAAS,CAAC;AAC1B,CAAC;AAAAN,GAAA,CAdKF,QAAQ;AAiBd,SAAQV,OAAO,EAAEU,QAAQ"},"metadata":{},"sourceType":"module"}